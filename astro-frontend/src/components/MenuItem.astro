---
// src/components/MenuItem.astro
import { getAssetUrl } from '../lib/directus';

const { item } = Astro.props;

// Formatear precio con formato de moneda
const formattedPrice = `$${Number(item.price).toFixed(2)}`;

// URL de imagen o placeholder
const imageUrl = item.image ? getAssetUrl(item.image) : '/placeholder-food.jpg';
---

<div class="bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:scale-[1.02] duration-300">
  <div class="relative">
    <img 
      src={imageUrl} 
      alt={item.name} 
      class="w-full h-60 object-cover"
    />
    
    {item.dietary_tags && item.dietary_tags.length > 0 && (
      <div class="absolute top-2 right-2 flex flex-wrap gap-1 justify-end">
        {item.dietary_tags.map((tag: string) => (
          <span class="bg-white text-[var(--primaryColor)] text-xs px-2 py-1 rounded-full shadow">
            {tag}
          </span>
        ))}
      </div>
    )}
  </div>
  
  <div class="p-6">
    <div class="flex justify-between items-start mb-2">
      <h3 class="text-xl font-medium">{item.name}</h3>
      <span class="text-lg font-semibold text-[var(--primaryColor)]">{formattedPrice}</span>
    </div>
    <p class="text-gray-600 text-sm line-clamp-3">{item.description}</p>
  </div>
</div>